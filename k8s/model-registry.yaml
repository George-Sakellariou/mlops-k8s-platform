apiVersion: apps/v1
kind: Deployment
metadata:
  name: model-registry-api
  namespace: ml-platform
  labels:
    app: model-registry-api
    component: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: model-registry-api
  template:
    metadata:
      labels:
        app: model-registry-api
        component: api
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15
        command:
        - /bin/sh
        - -c
        - |
          until pg_isready -h postgres-service -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
      - name: wait-for-minio
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        - |
          until curl -f http://minio-service:9000/minio/health/ready; do
            echo "Waiting for MinIO..."
            sleep 2
          done
          echo "MinIO is ready!"
      containers:
      - name: api
        image: ml-platform/api:latest
        imagePullPolicy: Never  # For local development with minikube
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_URL
          value: "postgresql://postgres:postgres@postgres-service:5432/mlplatform"
        - name: MINIO_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: ml-platform-config
              key: MINIO_ENDPOINT
        - name: MINIO_ACCESS_KEY
          valueFrom:
            configMapKeyRef:
              name: ml-platform-config
              key: MINIO_ACCESS_KEY
        - name: MINIO_SECRET_KEY
          valueFrom:
            configMapKeyRef:
              name: ml-platform-config
              key: MINIO_SECRET_KEY
        - name: MINIO_SECURE
          value: "false"
        - name: MODEL_BUCKET
          valueFrom:
            configMapKeyRef:
              name: ml-platform-config
              key: MODEL_BUCKET
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: ml-platform-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: ml-platform-config
              key: API_PORT
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: ml-platform-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: ml-platform-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: model-registry-service
  namespace: ml-platform
  labels:
    app: model-registry-api
    component: api
spec:
  selector:
    app: model-registry-api
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  type: ClusterIP
---
# Expose API for external access (development)
apiVersion: v1
kind: Service
metadata:
  name: model-registry-external
  namespace: ml-platform
  labels:
    app: model-registry-api
    component: api
spec:
  selector:
    app: model-registry-api
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    nodePort: 30800
  type: NodePort